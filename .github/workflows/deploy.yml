name: Deploy to Oracle Cloud

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual deployment

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Oracle Cloud
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.ORACLE_HOST }}
        username: ${{ secrets.ORACLE_USER }}
        key: ${{ secrets.ORACLE_SSH_PRIVATE_KEY }}
        port: 22
        timeout: 30s
        script: |
          # Set up error handling
          set -e
          set -o pipefail

          cd /home/opc/reverse-bundling

          echo "🚀 Starting deployment..."

          # Check git status
          echo "📋 Checking git status..."
          git status

          # Pull latest changes
          echo "⬇️ Pulling latest changes..."
          git pull origin main --no-edit

          # Show latest commit
          echo "📝 Latest commit:"
          git log -1 --oneline

          # Install dependencies
          echo "📦 Installing dependencies..."
          npm ci --production=false

          # Build the application
          echo "🔨 Building application..."
          npm run build

          # Kill existing process gracefully
          echo "🛑 Stopping existing application..."
          if pgrep -f 'remix-serve' > /dev/null; then
            pkill -TERM -f 'remix-serve'
            sleep 5
            if pgrep -f 'remix-serve' > /dev/null; then
              echo "Force killing remaining processes..."
              pkill -KILL -f 'remix-serve' || true
            fi
          else
            echo "No existing process found"
          fi

          # Wait a moment
          sleep 2

          # Clean up old build files (optional)
          echo "🧹 Cleaning up old logs..."
          find . -name "*.log" -mtime +7 -delete 2>/dev/null || true

          # Start the application
          echo "▶️ Starting application..."
          nohup node node_modules/.bin/remix-serve ./build/server/index.js > app.log 2>&1 &

          # Wait for app to start
          echo "⏳ Waiting for application to start..."
          for i in {1..30}; do
            if curl -s -f http://localhost:3000/health > /dev/null 2>&1; then
              echo "✅ Application deployed successfully!"
              echo "📊 Application status:"
              curl -s http://localhost:3000/health
              exit 0
            fi
            echo "Waiting... ($i/30)"
            sleep 2
          done

          echo "❌ Application failed to start within 60 seconds"
          echo "📋 Last 20 lines of app.log:"
          tail -20 app.log || echo "No log file found"
          exit 1